name: OPEN-RUN-Amazon EC2

on:
  push:
    branches:
      - main

permissions:
  contents: read
  
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    # (1) 기본 체크아웃
    - name: Checkout
      uses: actions/checkout@v2

    # (2) JDK 17 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
#        distribution: 'temurin'
        java-version: 17
    
#    - name: Set application.yml
#      uses: actions/checkout@v3
    - run: mkdir -p ./src/main/resources
    - run: touch ./src/main/resources/application.yml
    - run: echo "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/application.yml
#    - run: cat ./src/main/resources/application.yml
    - run: mkdir -p ./src/test/resources
    - run: touch ./src/test/resources/application.yml
    - run: echo "${{ secrets.APPLICATION_TEST_YML }}" > ./src/test/resources/application.yml
    
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      shell: bash

    # (3) Gradle build
    - name: Build with Gradle
      run: ./gradlew build
      shell: bash

    # docker build 과정
    - name: Docker build & push
      run: |
          sudo usermod -aG docker $USER
          newgrp docker
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }}/open-run:shh0429 .
          docker push ${{ secrets.DOCKER_REPO }}/open-run:shh0429

    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.KEY }}
        port: 22
        script: |
          sudo docker rm -f $(docker ps -qa)
          sudo docker pull ${{ secrets.DOCKER_REPO }}/open-run:shh0429
          docker-compose -f /home/ubuntu/docker-compose.yml up -d
          docker image prune -f